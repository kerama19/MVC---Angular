@model Lab.Data.VirtualModel.TempPermissions

@{
    ViewBag.Title = "Edit Permissions";
}
<div class="alert alert-info" role="alert">    
    <span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span>
    UserName: <strong>@Model.UserName</strong>, Function: <strong>@Model.currentFunction</strong>
</div>
@using (Html.BeginForm("SavePermissions", "Permission", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.HiddenFor(m => m.UserId, new { @class = "form-control" })
    @Html.HiddenFor(m => m.UserName, new { @class = "form-control" })
    @Html.HiddenFor(m => m.currentFunction, new { @class = "form-control" })            
    <div class="form-group">
        @Html.LabelFor(m => m.CanRead, new { @class = "control-label col-sm-2" })
        <div class="col-sm-4">
            @Html.CheckBoxFor(m => m.CanRead, new { @class = "checkbox" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CanCreate, new { @class = "control-label col-sm-2" })
        <div class="col-sm-4">
            @Html.CheckBoxFor(m => m.CanCreate, new { @class = "checkbox" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CanUpdate, new { @class = "control-label col-sm-2" })
        <div class="col-sm-4">
            @Html.CheckBoxFor(m => m.CanUpdate, new { @class = "checkbox" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.CanDelete, new { @class = "control-label col-sm-2" })
        <div class="col-sm-4">
            @Html.CheckBoxFor(m => m.CanDelete, new { @class = "checkbox" })
        </div>
    </div>
    if (CurrentUser.IsInRole("Permissions", "Create") && CurrentUser.IsInRole("Permissions", "Delete"))
    {
        <div class="form-actions">
            <div class="col-sm-offset-2 col-sm-10">
                <button type="submit" class="btn btn-success">
                    <span class="glyphicon glyphicon-floppy-disk" aria-hidden="true"></span>
                    <span>Save</span>
                </button>
            </div>
        </div>            
    }
    if (ViewData["Type"].ToString().Equals("SingleUser"))
    { 
        <a>
            <i class="glyphicon glyphicon-circle-arrow-left"></i>
            <span class="sr-only">@Html.ActionLink("Back To Permissions", "ViewPermissions", "Permission", new { username = Model.UserName }, null)</span>
        </a>
    }
    if (ViewData["Type"].ToString().Equals("MultiUser"))
    {
        <a>
            <i class="glyphicon glyphicon-circle-arrow-left"></i>
            <span class="sr-only">@Html.ActionLink("Back To Permissions List", "ViewPermissionsList", "Permission", null, null)</span>
        </a>
    }
}
